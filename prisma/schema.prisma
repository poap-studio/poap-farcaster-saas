generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String   @id @default(cuid())
  fid          Int?     @unique
  googleId     String?  @unique
  email        String?  @unique
  username     String
  displayName  String?
  profileImage String?
  provider     String   @default("farcaster") // "farcaster" or "google"
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  drops        Drop[]
}

model Drop {
  id               String   @id @default(cuid())
  slug             String   @unique @default(cuid())
  userId           String
  poapEventId      String
  poapSecretCode   String
  buttonColor      String   @default("#0a5580")
  backgroundColor  String   @default("#073d5c")
  logoUrl          String?
  mintMessage      String   @default("This POAP celebrates the Farcaster community and our journey together.")
  disclaimerMessage String   @default("By minting this POAP you accept these terms: https://poap.xyz/terms")
  requireFollow    Boolean  @default(true)
  followUsername   String?
  requireRecast    Boolean  @default(true)
  requireQuote     Boolean  @default(false)
  isActive         Boolean  @default(true)
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  claims           Claim[]
  user             User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@index([slug])
}

model Claim {
  id        String   @id @default(cuid())
  dropId    String
  fid       Int
  username  String?
  followers Int?
  address   String
  txHash    String?
  claimedAt DateTime @default(now())
  drop      Drop     @relation(fields: [dropId], references: [id], onDelete: Cascade)

  @@unique([dropId, fid])
  @@index([dropId])
  @@index([fid])
}
