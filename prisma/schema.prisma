// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String   @id @default(cuid())
  fid             Int      @unique
  username        String
  displayName     String?
  profileImage    String?
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  
  drops           Drop[]
}

model Drop {
  id                      String   @id @default(cuid())
  slug                    String   @unique @default(cuid())
  userId                  String
  
  // POAP Configuration
  poapEventId             String
  poapSecretCode          String
  
  // Customization
  buttonColor             String   @default("#0a5580")
  backgroundColor         String   @default("#073d5c")
  logoUrl                 String?
  mintMessage             String   @default("This POAP celebrates the Farcaster community and our journey together.")
  
  // Requirements
  requireFollow           Boolean  @default(true)
  followUsername          String?
  requireRecast           Boolean  @default(true)
  
  // Status
  isActive                Boolean  @default(true)
  createdAt               DateTime @default(now())
  updatedAt               DateTime @updatedAt
  
  user                    User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  claims                  Claim[]
  
  @@index([userId])
  @@index([slug])
}

model Claim {
  id                      String   @id @default(cuid())
  dropId                  String
  fid                     Int
  address                 String
  txHash                  String?
  claimedAt               DateTime @default(now())
  
  drop                    Drop     @relation(fields: [dropId], references: [id], onDelete: Cascade)
  
  // Ensure one claim per user per drop
  @@unique([dropId, fid])
  @@index([dropId])
  @@index([fid])
}
